###########################
# Core Red Piranha Settings
###########################

# DIRECTORIES THAT SAMPLES ARE FOUND IN
# Option to allow try different places - allows for running in Dev or Docker mode
# We will search the directories in order listed, and take the samples from the first directory found
# Make sure to leave '/' at the end of the path
sample.Base.Directory.Default = /workspace/BOOT-INF/classes/examples/
sample.Base.Directory.Alternate = src/main/resources/examples/

# PREPROCESSING SCRIPT
# If present in the base directory it will be run
script.preprocess=InjectNamedRanges.groovy



###########################
# Spring Framework settings
###########################

# Port that web server will listen to - will default to 8080 if commented out
server.port=7000

# Logging
# Show lower level web info - can comment this out
logging.level.web=DEBUG 

logging.level.org.springframework.web=INFO
logging.level.net.firstpartners=DEBUG
logging.file.name=RedPiranha.log

# Enable JMX so we can look inside the application
# Endpoints will be at normal server /actuator e.g http://localhost:7000/actuator/ 
#spring.jmx.enabled=true
#endpoints.jmx.enabled=true
#management.endpoints.web.exposure.include=*

#Enable auto restart during web development if we edit files
spring.devtools.restart.additional-paths=src/main/resources/static

#allow for overriding of Spring beans
spring.main.allow-bean-definition-overriding=true

####################################
# More advanced Settings
####################################

# RULE ENGINE LOGGING
# 	Show full logging from the Rule Engine (a lot of detail)
SHOW_FULL_RULE_ENGINE_LOGS=FALSE

