<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.1.4</version>		<!-- lookup parent from repository was 2.7.16 -->
	</parent>

	<!-- Name and Version Number of the Artifact we are building -->
	<groupId>net.firstpartners</groupId>
	<artifactId>redpiranha</artifactId>
	<version>2.3.1-SNAPSHOT</version>
	<name>Red-Piranha</name>
	<description>User Interface and samples mapping Excel Data to Java and Business Rules</description>
	<properties>
		<java.version>17</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<!-- To provide embedded webservice-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<!-- needed to render html templates in /resources/templates -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<!-- Provides a lot of "out of box" services useful for production deployment-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- Enable Web Management of Beans
		<dependency>
			<groupId>org.jolokia</groupId>
		<artifactId>jolokia-core</artifactId>
		</dependency>-->

		<!-- Swagger - self documenting REST endpoints
		<dependency>
		<groupId>io.springfox</groupId>
			<artifactId>springfox-boot-starter</artifactId>
		<version>3.0.0</version>
		</dependency>-->

		<dependency>
			<groupId>org.drools</groupId>
			<artifactId>drools-core</artifactId>
			<version>8.32.0.Final</version>
		</dependency>

		<dependency>
			<groupId>org.drools</groupId>
			<artifactId>drools-compiler</artifactId>
			<version>8.32.0.Final</version>
		</dependency>

		<!-- Needed for compiling rules-->
		<dependency>
			<groupId>org.drools</groupId>
			<artifactId>drools-canonical-model</artifactId>
			<version>8.32.0.Final</version>
		</dependency>

		<dependency>
			<groupId>org.drools</groupId>
			<artifactId>drools-model-compiler</artifactId>
			<version>8.32.0.Final</version>
		</dependency>

		<dependency>
			<groupId>org.drools</groupId>
			<artifactId>drools-mvel</artifactId>
			<version>8.32.0.Final</version>
		</dependency>

		<!-- auto loads drools - remove?-->
		<dependency>
			<groupId>org.drools</groupId>
			<artifactId>drools-xml-support</artifactId>
			<version>8.32.0.Final</version>
			<scope>test</scope>
		</dependency>

		<!-- Wider KIE / Kogito dependencies-->
		<!-- Required for the DMN runtime API -->
		<dependency>
			<groupId>org.kie</groupId>
			<artifactId>kie-dmn-core</artifactId>
			<version>8.32.0.Final</version>
		</dependency>

		<!-- Required if not using classpath kie container -->
		<dependency>
			<groupId>org.kie</groupId>
			<artifactId>kie-ci</artifactId>
			<version>8.32.0.Final</version>
		</dependency>

		<!-- Apache Poi for reading MS office files-->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>5.2.3</version>
		</dependency>

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>5.2.3</version>
		</dependency>

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-scratchpad</artifactId>
			<version>5.2.3</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-csv</artifactId>
			<version>1.9.0</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-text</artifactId>
			<version>1.10.0</version>
		</dependency>

		<dependency>
			<groupId>org.apache.pdfbox</groupId>
			<artifactId>pdfbox</artifactId>
			<version>2.0.27</version>
		</dependency>

		<!-- For Java to JSON two way mapping-->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.14.1</version>
		</dependency>

		<!--To run the Groovy preprocessing scripts-->
		<dependency>
			<groupId>org.apache.groovy</groupId> 
			<artifactId>groovy-all</artifactId>
			<version>4.0.15</version>
			<type>pom</type>
		</dependency>



		<!-- Unit Testing -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>5.9.2</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.9.2</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>

			<!--Ant Task, tied to Maven Package Phase -->
			<!--Builds a 2nd Jar, containing only data classes-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>zip-artifacts</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<!-- includes only classes in our data model -->
								<jar destfile="target/rp-data-model-${project.version}.jar" basedir="target/classes" includes="net/firstpartners/data/**" excludes="**/Test.class" />

							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Enables Srping as a framework-->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>

					<!-- Allow layers when building a docker image -->
					<!-- Enables docker to cache the libs that do not change -->
					<layers>
						<enabled>true</enabled>
					</layers>

				</configuration>

			</plugin>

			<!-- vulnerability check the libs uses-->
			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
				<version>8.4.0</version> <!-- was 7.4.2-->
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Generate Javadoc-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.4.1</version>
				<configuration></configuration>
			</plugin>

		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<artifactId>maven-project-info-reports-plugin</artifactId>
			</plugin>
		</plugins>
	</reporting>

</project>