package net.firstpartners.core.log;

import java.io.IOException;

import org.apache.logging.log4j.core.appender.FileAppender;
import org.apache.logging.log4j.core.appender.FileAppender.Builder;
import org.springframework.beans.factory.annotation.Autowired;
import org.apache.logging.log4j.Level;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import net.firstpartners.ui.Start;
import net.firstpartners.ui.utils.Config;

/**
 * Extend logging so that we can control logging in an 	exe environment where we
 * may not have full control of config
 * 
 * @author PBrowne
 */
public class RpLogger extends LogManager {

	// the handle to the log file
	private static FileAppender fileHandler = null;


	/**
	 * Get a handle to a logger, with our additions (if set)
	 * 
	 * @param name
	 * @return Logger
	 */
	public static Logger getLogger(String name) {

		return LogManager.getLogger(name);
		
	}

	/**
	 * Check if we need to force turn of of logging
	 * 
	 * @param logFileName
	 * @throws SecurityException
	 * @throws IOException
	 */
	public static void checkForceLogToFile(String logFileName) throws SecurityException, IOException {

		if (logFileName != null & logFileName !="") {

			
			if (fileHandler != null) {
				
				FileAppender.Builder b = FileAppender.newBuilder();
				b.withFileName(myConfig.);
				b.withAppend(true);
				b.setName("fileLogger");
				b.build();
				fileHandler = b.build();
				
				//Log 
				Logger thisLog = getLogger(Start.class.getName());
				thisLog.debug("Forced Log to:"+logFileName);
				log.addAppender(fileHandler);
				
			}

			return log;


		}

	}

}
